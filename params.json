{"name":"Symfony","tagline":"Symfony 2 environment with Berkshelf Chef and Vagrant support","body":"symfony\r\n=======\r\n\r\nSymfony environment with Berkshelf Chef and Vagrant support\r\n* Master: [![Build Status](https://api.travis-ci.org/sergiuionescu/symfony.svg?branch=master)](http://travis-ci.org/sergiuionescu/symfony)\r\n* Dev: [![Build Status](https://api.travis-ci.org/sergiuionescu/symfony.svg?branch=dev)](http://travis-ci.org/sergiuionescu/symfony)\r\n\r\nPhp7 support via ppa:ondrej/php.\r\n\r\nRequirements\r\n------------\r\n* chef-dk\r\n* chef-solo\r\n* berkshelf\r\n\r\nExtra development requirements\r\n-----------------------------\r\n* vagrant\r\n* chef dk\r\n* virtualbox\r\n\r\nResources links\r\n---------------\r\n* Chef DK(includes Berkshelf): https://downloads.getchef.com/chef-dk/\r\n* Vagrant: https://www.vagrantup.com/downloads.html\r\n* Virtualbox: https://www.virtualbox.org/wiki/Downloads\r\n\r\n\r\nHow to test dev environment\r\n---------------------------\r\n- Clone the repository\r\n- Go to the project root\r\n- Run \"kitchen converge default-ubuntu-1404\" (or \"vagrant up\" if you wish to use vagrant-berkshelf)\r\n\r\nLWRP\r\n----\r\nThe symfony_app lwrp allows the installation of multiple symfony applications.\r\nEx:\r\n```ruby\r\nsymfony_app \"symfony\" do\r\n  action :create\r\nend\r\n```\r\nThis will setup a new symfony application under /var/www/symfony\r\n\r\nActions\r\n- `:create`: - Install the application\r\n- `:delete`: - Delete the application files\r\n\r\nAttribute parameters\r\n- `app_name` - Name attribute. The application name and path suffix.\r\n- `core_version` - Symfony core version.\r\n- `database_host` - Database hostname/ip.\r\n- `database_driver` - Database driver. Ex pdo_mysql.\r\n- `unix_socket` - Mysql unix socket path.\r\n- `create_db` - Boolean, does not create a db via doctrine by default.\r\n- `database_name` - Database name, defaults to `symfony`.\r\n- `database_port` - Database port.\r\n- `database_user` - Database username.\r\n- `database_password` - Database password.\r\n- `mailer_transport` - Mailer transport. Ex smtp.\r\n- `mailer_host` - Mailer host.\r\n- `mailer_user` - Mailer username.\r\n- `mailer_password` - Mailer password.\r\n- `locale` - Application locale.\r\n- `secret` - Application secret.\r\n\r\nCustomizing your dev environment\r\n--------------------------------\r\nThe role used to provision the dev environment, you can create your own role to fit your needs:\r\n```json\r\n{\r\n    \"name\": \"symfony\",\r\n    \"chef_type\": \"role\",\r\n    \"json_class\": \"Chef::Role\",\r\n    \"description\": \"Symfony environment configuration.\",\r\n    \"run_list\": [\r\n        \"recipe[symfony]\",\r\n        \"recipe[lamp::nfs]\",\r\n        \"recipe[lamp::xdebug]\"\r\n    ],\r\n    \"default_attributes\": {\r\n        \"lamp\": {\r\n            \"xdebug\": {\r\n                \"directives\": {\r\n                    \"remote_host\": \"10.0.2.2\",\r\n                    \"remote_enable\": 0,\r\n                    \"remote_autostart\": 1\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nDetails:\r\n```json\r\n\"run_list\": [\r\n        \"recipe[symfony]\",\r\n        \"recipe[lamp::nfs]\",\r\n        \"recipe[lamp::xdebug]\"\r\n    ],\r\n```\r\nThe recipes lamp::nfs and lamp::xdebug are only required for the dev environment to expose a nfs share of your /var/www directory and install the xdebug extension for php.\r\n\r\n\r\n```json\r\n\"mysql\": {\r\n    \"server_root_password\": \"\",\r\n    \"server_repl_password\": \"\",\r\n    \"server_debian_password\": \"\"\r\n}\r\n```\r\nConfigure your mysql dev server credentials.\r\n\r\n```json\r\n\"lamp\": {\r\n    \"xdebug\": {\r\n        \"directives\": {\r\n            \"remote_host\": \"10.0.2.2\",\r\n            \"remote_enable\": 0,\r\n            \"remote_autostart\": 1\r\n        }\r\n    }\r\n}\r\n```\r\nSet the xdebug configuration, all xdebug configuration directives are supported here. In this example xdebug is connecting back on the vm's NAT interface, \r\nconfigured to start the debugging session automatically but disabled. You need to enable it manually by editing your xdebug.ini.\r\n\r\nSample role with php7 support.\r\n\r\nPhp 7 is supported via ppa. The are a number of overwrite attributes that need to be set as long with a path for the php cookbook to disable pear and pecl update.\r\n```json\r\n{\r\n    \"name\": \"symfony\",\r\n    \"chef_type\": \"role\",\r\n    \"json_class\": \"Chef::Role\",\r\n    \"description\": \"Symfony environment configuration.\",\r\n    \"run_list\": [\r\n        \"recipe[symfony]\",\r\n        \"recipe[symfony::test]\",\r\n        \"recipe[lamp::nfs]\",\r\n        \"recipe[lamp::xdebug]\"\r\n    ],\r\n    \"default_attributes\": {\r\n        \"lamp\": {\r\n            \"xdebug\": {\r\n                \"directives\": {\r\n                    \"remote_host\": \"10.0.2.2\",\r\n                    \"remote_enable\": 0,\r\n                    \"remote_autostart\": 1\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \"override_attributes\": {\r\n        \"php\": {\r\n            \"version\": \"7.0\",\r\n            \"conf_dir\": \"/etc/php/7.0/cli\",\r\n            \"packages\": [\r\n                \"php7.0-cgi\",\r\n                \"php7.0\",\r\n                \"php7.0-dev\",\r\n                \"php7.0-cli\",\r\n                \"php7.0-json\",\r\n                \"php7.0-curl\",\r\n                \"php-pear\"\r\n            ],\r\n            \"mysql\": {\r\n                \"package\": \"php7.0-mysql\"\r\n            },\r\n            \"fpm_package\": \"php7.0-fpm\",\r\n            \"fpm_pooldir\": \"/etc/php/7.0/fpm/pool.d\",\r\n            \"fpm_service\": \"php7.0-fpm\",\r\n            \"fpm_default_conf\": \"/etc/php/7.0/fpm/pool.d/www.conf\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nCustomizing the role in production\r\n----------------------------------\r\n\r\nAn example role for production would be the following:\r\n```json\r\n{\r\n    \"name\": \"Symfony\",\r\n    \"chef_type\": \"role\",\r\n    \"json_class\": \"Chef::Role\",\r\n    \"description\": \"Symfony environment configuration.\",\r\n    \"run_list\": [\r\n        \"recipe[symfony]\"\r\n    ],\r\n    \"default_attributes\": {\r\n        \"mysql\": {\r\n            \"server_root_password\": \"supersecretpassword\",\r\n            \"server_repl_password\": \"supersecretpassword\",\r\n            \"server_debian_password\": \"supersecretpassword\"\r\n        }\r\n    }\r\n}\r\n```\r\nNotice that you can drop the dependencies on nfs and xdebug, you should also set a more secure password for your mysql server.\r\n\r\nSource mounts\r\n-------------\r\n\r\nThe project root directory is mounted inside the dev virtual machine directory under the /vagrant path when using both kitchen converge or vagrant up to launch the machine.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}